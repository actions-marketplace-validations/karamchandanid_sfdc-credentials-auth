name: 'Git : Salesforce Authentication'
description: 'This action allows you to Authenticate Salesforce using credential and passing response FROM oauth2 : token '

inputs:
  user_name:
    required: true
    type: string
  login_url:
    type: string
    default: https://login.salesforce.com
  password:
    required: true
    description: combination of <password>:<security_token>
  sfdc_client_id:
    required: true
    description: Consumer Key of a connected App created within salesforce
  sfdc_client_secret:
    required: true
    description: Consumer Secret of a connected App created within salesforce

# Mapping the workflow outputs with job outputs
outputs:
  access_token:
    description: "The first output string"
    value: ${{ steps.sfdc_rest_call.outputs.access_token }}
  instance_url:
    description: "The second output string"
    value: ${{ steps.sfdc_rest_call.outputs.instance_url }}
  id:
    description: "The first output string"
    value: ${{ steps.sfdc_rest_call.outputs.id }}
  error:
    description: "The second output string"
    value: ${{ steps.sfdc_rest_call.outputs.error }}
  error_description:
    description: "The second output string"
    value: ${{ steps.sfdc_rest_call.outputs.error_description }}

runs:
  using: "composite"
  steps:
    - id: sfdc_rest_call
      shell: bash
      name: Authenticating User using Rest call
      run: |
        echo "----------------------------------"
        echo "Authenticating user: ${{ inputs.user_name}} with instance: ${{ inputs.login_url}}"
        echo "----------------------------------"
        sfdc_auth_url=$(echo "${{ inputs.login_url}}/services/oauth2/token?grant_type=password&username=${{ inputs.user_name }}&password=${{ inputs.password }}&client_id=${{ inputs.sfdc_client_id }}&client_secret=${{ inputs.sfdc_client_secret }}")
        response=$(curl --request POST --url "$sfdc_auth_url" --header 'accept: application/json' ); 
        # debugging callout response
        
        # ----------------------------------
        # Extracing data from response
        # ----------------------------------
        
        # accesss_token
        access_token=$(echo $response | jq -r '.access_token');
        
        # org instance url
        instance_url=$(echo $response | jq -r '.instance_url');
        
        # salesforce domain/id/<org_id>/<user_id>
        id=$(echo $response | jq -r '.id');
        
        # in case getting error into authentication
        error=$(echo $response | jq -r '.error');
        
        # error_description related to error getting into authentication
        error_description=$(echo $response | jq -r '.error_description');
        
        # setting up outputs
        echo ::set-output name=access_token::${access_token}
        echo ::set-output name=instance_url::${instance_url}
        echo ::set-output name=id::${id}
        echo ::set-output name=error::${error}
        echo ::set-output name=error_description::${error_description}
        
branding:
  icon: 'user-check'  
  color: 'blue'
